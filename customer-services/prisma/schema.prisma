generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        String    @id @default(cuid())
  firstName String
  lastName  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  address   Address?
  Rating    Rating[]
  whislist  Whislist?
}

model Merchant {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String
  lastName  String
  profile   Profile?
  Rating    Rating[]
}

model Profile {
  id           String           @id @default(cuid())
  bio          String
  headerImage  String?
  followers    Int              @default(0)
  following    Int              @default(0)
  rating       Float            @default(0)
  lastActive   DateTime         @default(now())
  category     MerchantCategory
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  merchantId   String           @unique
  merchantName String
  ratingCount  Int              @default(0)
  address      Address?
  merchant     Merchant         @relation(fields: [merchantId], references: [id])
}

model Address {
  id         String    @id @default(cuid())
  detail     String?
  city       String
  zip        String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  customerId String?   @unique
  profileId  String?   @unique
  province   String
  country    String    @default("Indonesia")
  district   String
  village    String
  Customer   Customer? @relation(fields: [customerId], references: [id])
  profile    Profile?  @relation(fields: [profileId], references: [id])
}

model Whislist {
  id         String   @id @default(cuid())
  name       String
  quantity   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  customerId String   @unique
  Customer   Customer @relation(fields: [customerId], references: [id])
}

model Rating {
  id         String   @id @default(cuid())
  rating     Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  customerId String
  merchantId String
  customer   Customer @relation(fields: [customerId], references: [id])
  merchant   Merchant @relation(fields: [merchantId], references: [id])
}

enum MerchantCategory {
  GENERAL
  SMARTPHONE
  LAPTOP
  ACCESSORIES
}
